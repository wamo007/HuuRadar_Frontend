import {
  require_react
} from "./chunk-RLJ2RCJQ.js";
import {
  __commonJS
} from "./chunk-DC5AMYBS.js";

// node_modules/@cascadia-code/scroll-to-hash-element/dist/index.js
var require_dist = __commonJS({
  "node_modules/@cascadia-code/scroll-to-hash-element/dist/index.js"(exports) {
    Object.defineProperty(exports, "__esModule", { value: true });
    var react_1 = require_react();
    var ScrollToHashElement = ({ behavior = "auto", inline = "nearest", block = "start" }) => {
      const [hash, setHash] = (0, react_1.useState)(window.location.hash);
      const originalPushState = window.history.pushState;
      const originalReplaceState = window.history.replaceState;
      window.history.pushState = function(...args) {
        const result = originalPushState.apply(this, args);
        window.dispatchEvent(new Event("pushstate"));
        window.dispatchEvent(new Event("locationchange"));
        return result;
      };
      window.history.replaceState = function(...args) {
        const result = originalReplaceState.apply(this, args);
        window.dispatchEvent(new Event("replacestate"));
        window.dispatchEvent(new Event("locationchange"));
        return result;
      };
      window.addEventListener("popstate", () => {
        window.dispatchEvent(new Event("locationchange"));
      });
      (0, react_1.useEffect)(() => {
        const handleLocationChange = () => {
          setHash(window.location.hash);
        };
        window.addEventListener("locationchange", handleLocationChange);
        return () => {
          window.removeEventListener("locationchange", handleLocationChange);
        };
      }, []);
      (0, react_1.useLayoutEffect)(() => {
        const removeHashCharacter = (str) => {
          const result = str.slice(1);
          return result;
        };
        if (hash) {
          const element = document.getElementById(removeHashCharacter(hash));
          if (element) {
            console.log("scrollIntoView");
            element.scrollIntoView({
              behavior,
              inline,
              block
            });
          }
        }
      }, [hash]);
      return null;
    };
    exports.default = ScrollToHashElement;
  }
});
export default require_dist();
//# sourceMappingURL=@cascadia-code_scroll-to-hash-element.js.map
